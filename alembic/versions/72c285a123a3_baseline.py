"""baseline

Revision ID: 72c285a123a3
Revises: 
Create Date: 2025-06-22 15:25:40.715070

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import core.utils.types


# revision identifiers, used by Alembic.
revision: str = '72c285a123a3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('banned_ips',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(), nullable=False),
    sa.Column('ban_reason', sa.String(), nullable=False),
    sa.Column('banned_until', sa.DateTime(timezone=True), nullable=False),
    sa.Column('attempt_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ip_address')
    )
    op.create_table('boot_errors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.String(), nullable=False),
    sa.Column('traceback', sa.Text(), nullable=False),
    sa.Column('instance_type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conflict_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('model_name', sa.String(), nullable=False),
    sa.Column('local_version', sa.Integer(), nullable=False),
    sa.Column('cloud_version', sa.Integer(), nullable=False),
    sa.Column('resolved_version', sa.Integer(), nullable=False),
    sa.Column('resolution_time', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('connected_sites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.String(), nullable=False),
    sa.Column('last_seen', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_version', sa.String(), nullable=True),
    sa.Column('sync_status', sa.String(), nullable=True),
    sa.Column('last_update_status', sa.String(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('site_id')
    )
    op.create_table('custom_columns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('table_name', sa.String(), nullable=False),
    sa.Column('column_name', sa.String(), nullable=False),
    sa.Column('data_type', sa.String(), nullable=False),
    sa.Column('default_value', sa.String(), nullable=True),
    sa.Column('user_visible', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('db_errors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_name', sa.String(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('error_message', sa.String(), nullable=False),
    sa.Column('traceback', sa.Text(), nullable=False),
    sa.Column('user', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', core.utils.types.GUID(length=36), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('conflict_data', sa.JSON(), nullable=True),
    sa.Column('sync_state', sa.JSON(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('upload_icon', sa.String(), nullable=True),
    sa.Column('upload_image', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_device_types_uuid'), 'device_types', ['uuid'], unique=True)
    op.create_table('duplicate_resolution_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_name', sa.String(), nullable=False),
    sa.Column('kept_id', sa.Integer(), nullable=False),
    sa.Column('removed_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', core.utils.types.GUID(length=36), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('conflict_data', sa.JSON(), nullable=True),
    sa.Column('sync_state', sa.JSON(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location_type', sa.String(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_locations_uuid'), 'locations', ['uuid'], unique=True)
    op.create_table('schema_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('alembic_revision_id', sa.String(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('instance_type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('site_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.String(), nullable=False),
    sa.Column('site_name', sa.String(), nullable=False),
    sa.Column('api_key', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('site_id')
    )
    op.create_table('snmp_communities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', core.utils.types.GUID(length=36), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('conflict_data', sa.JSON(), nullable=True),
    sa.Column('sync_state', sa.JSON(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('community_string', sa.String(), nullable=False),
    sa.Column('snmp_version', sa.String(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_snmp_communities_uuid'), 'snmp_communities', ['uuid'], unique=True)
    op.create_table('ssh_credentials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', core.utils.types.GUID(length=36), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('conflict_data', sa.JSON(), nullable=True),
    sa.Column('sync_state', sa.JSON(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('private_key', sa.Text(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_ssh_credentials_uuid'), 'ssh_credentials', ['uuid'], unique=True)
    op.create_table('sync_errors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_name', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('error_trace', sa.Text(), nullable=False),
    sa.Column('error_hash', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('error_hash')
    )
    op.create_table('sync_issues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_name', sa.String(), nullable=False),
    sa.Column('field_name', sa.String(), nullable=False),
    sa.Column('issue_type', sa.String(), nullable=False),
    sa.Column('instance', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('system_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('system_tunables',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('function', sa.String(), nullable=False),
    sa.Column('file_type', sa.String(), nullable=False),
    sa.Column('data_type', sa.String(), nullable=False),
    sa.Column('options', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', core.utils.types.GUID(length=36), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('conflict_data', sa.JSON(), nullable=True),
    sa.Column('sync_state', sa.JSON(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_tags_uuid'), 'tags', ['uuid'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', core.utils.types.GUID(length=36), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('conflict_data', sa.JSON(), nullable=True),
    sa.Column('sync_state', sa.JSON(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('theme', sa.String(), nullable=False),
    sa.Column('font', sa.String(), nullable=False),
    sa.Column('menu_style', sa.String(), nullable=False),
    sa.Column('menu_tab_color', sa.String(), nullable=True),
    sa.Column('menu_bg_color', sa.String(), nullable=True),
    sa.Column('menu_stick_theme', sa.Boolean(), nullable=False),
    sa.Column('menu_tab_colors', sa.JSON(), nullable=True),
    sa.Column('table_grid_style', sa.String(), nullable=False),
    sa.Column('icon_style', sa.String(), nullable=False),
    sa.Column('scroll_handoff_enabled', sa.Boolean(), nullable=False),
    sa.Column('ssh_username', sa.String(), nullable=True),
    sa.Column('ssh_password', sa.String(), nullable=True),
    sa.Column('ssh_port', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_location_lat', sa.Float(), nullable=True),
    sa.Column('last_location_lon', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_uuid'), 'users', ['uuid'], unique=True)
    op.create_table('vlans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', core.utils.types.GUID(length=36), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('conflict_data', sa.JSON(), nullable=True),
    sa.Column('sync_state', sa.JSON(), nullable=True),
    sa.Column('tag', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tag')
    )
    op.create_index(op.f('ix_vlans_uuid'), 'vlans', ['uuid'], unique=True)
    op.create_table('column_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('view', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deletion_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('model_name', sa.String(), nullable=False),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('origin', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('login_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=False),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('port_config_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('config_text', sa.Text(), nullable=False),
    sa.Column('last_edited', sa.DateTime(timezone=True), nullable=True),
    sa.Column('edited_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['edited_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('sites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', core.utils.types.GUID(length=36), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('conflict_data', sa.JSON(), nullable=True),
    sa.Column('sync_state', sa.JSON(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_sites_uuid'), 'sites', ['uuid'], unique=True)
    op.create_table('sync_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('model_name', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('origin', sa.String(), nullable=False),
    sa.Column('target', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('table_preferences',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('table_id', sa.String(), nullable=False),
    sa.Column('column_widths', sa.Text(), nullable=True),
    sa.Column('visible_columns', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'table_id')
    )
    op.create_table('user_ssh_credentials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('private_key', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dashboard_widgets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', core.utils.types.GUID(length=36), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('conflict_data', sa.JSON(), nullable=True),
    sa.Column('sync_state', sa.JSON(), nullable=True),
    sa.Column('hostname', sa.String(), nullable=False),
    sa.Column('ip', sa.String(), nullable=False),
    sa.Column('mac', sa.String(), nullable=True),
    sa.Column('asset_tag', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('manufacturer', sa.String(), nullable=False),
    sa.Column('serial_number', sa.String(), nullable=True),
    sa.Column('device_type_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('on_lasso', sa.Boolean(), nullable=True),
    sa.Column('on_r1', sa.Boolean(), nullable=True),
    sa.Column('priority', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('vlan_id', sa.Integer(), nullable=True),
    sa.Column('ssh_credential_id', sa.Integer(), nullable=True),
    sa.Column('snmp_community_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_seen', sa.DateTime(timezone=True), nullable=True),
    sa.Column('uptime_seconds', sa.Integer(), nullable=True),
    sa.Column('last_snmp_check', sa.DateTime(timezone=True), nullable=True),
    sa.Column('snmp_reachable', sa.Boolean(), nullable=True),
    sa.Column('detected_platform', sa.String(), nullable=True),
    sa.Column('detected_via', sa.String(), nullable=True),
    sa.Column('ssh_profile_is_default', sa.Boolean(), nullable=True),
    sa.Column('config_pull_interval', sa.String(), nullable=False),
    sa.Column('last_config_pull', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_origin', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deleted_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['device_type_id'], ['device_types.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.ForeignKeyConstraint(['snmp_community_id'], ['snmp_communities.id'], ),
    sa.ForeignKeyConstraint(['ssh_credential_id'], ['ssh_credentials.id'], ),
    sa.ForeignKeyConstraint(['vlan_id'], ['vlans.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hostname')
    )
    op.create_index(op.f('ix_devices_uuid'), 'devices', ['uuid'], unique=True)
    op.create_table('email_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('date_sent', sa.DateTime(timezone=True), nullable=True),
    sa.Column('recipient_count', sa.Integer(), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('import_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('device_count', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('site_dashboard_widgets',
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.PrimaryKeyConstraint('site_id', 'name')
    )
    op.create_table('site_memberships',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'site_id')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action_type', sa.String(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('config_backups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('config_text', sa.Text(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('queued', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('port_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_damage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_edit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('changes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_tags',
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('device_id', 'tag_id')
    )
    op.create_table('interface_change_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('interface_name', sa.String(), nullable=False),
    sa.Column('old_desc', sa.String(), nullable=True),
    sa.Column('new_desc', sa.String(), nullable=True),
    sa.Column('old_vlan', sa.Integer(), nullable=True),
    sa.Column('new_vlan', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('interfaces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('vlan_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['vlan_id'], ['vlans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('port_status_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('interface_name', sa.String(), nullable=False),
    sa.Column('oper_status', sa.String(), nullable=True),
    sa.Column('admin_status', sa.String(), nullable=True),
    sa.Column('speed', sa.Integer(), nullable=True),
    sa.Column('poe_draw', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('snmp_trap_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('source_ip', sa.String(), nullable=False),
    sa.Column('trap_oid', sa.String(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('syslog_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('source_ip', sa.String(), nullable=False),
    sa.Column('severity', sa.String(), nullable=True),
    sa.Column('facility', sa.String(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('syslog_entries')
    op.drop_table('snmp_trap_logs')
    op.drop_table('port_status_history')
    op.drop_table('interfaces')
    op.drop_table('interface_change_logs')
    op.drop_table('device_tags')
    op.drop_table('device_edit_logs')
    op.drop_table('device_damage')
    op.drop_table('config_backups')
    op.drop_table('audit_logs')
    op.drop_table('site_memberships')
    op.drop_table('site_dashboard_widgets')
    op.drop_table('import_logs')
    op.drop_table('email_logs')
    op.drop_index(op.f('ix_devices_uuid'), table_name='devices')
    op.drop_table('devices')
    op.drop_table('dashboard_widgets')
    op.drop_table('user_ssh_credentials')
    op.drop_table('table_preferences')
    op.drop_table('sync_logs')
    op.drop_index(op.f('ix_sites_uuid'), table_name='sites')
    op.drop_table('sites')
    op.drop_table('port_config_templates')
    op.drop_table('login_events')
    op.drop_table('deletion_logs')
    op.drop_table('column_preferences')
    op.drop_index(op.f('ix_vlans_uuid'), table_name='vlans')
    op.drop_table('vlans')
    op.drop_index(op.f('ix_users_uuid'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tags_uuid'), table_name='tags')
    op.drop_table('tags')
    op.drop_table('system_tunables')
    op.drop_table('system_metrics')
    op.drop_table('sync_issues')
    op.drop_table('sync_errors')
    op.drop_index(op.f('ix_ssh_credentials_uuid'), table_name='ssh_credentials')
    op.drop_table('ssh_credentials')
    op.drop_index(op.f('ix_snmp_communities_uuid'), table_name='snmp_communities')
    op.drop_table('snmp_communities')
    op.drop_table('site_keys')
    op.drop_table('schema_versions')
    op.drop_index(op.f('ix_locations_uuid'), table_name='locations')
    op.drop_table('locations')
    op.drop_table('duplicate_resolution_logs')
    op.drop_index(op.f('ix_device_types_uuid'), table_name='device_types')
    op.drop_table('device_types')
    op.drop_table('db_errors')
    op.drop_table('custom_columns')
    op.drop_table('connected_sites')
    op.drop_table('conflict_logs')
    op.drop_table('boot_errors')
    op.drop_table('banned_ips')
    # ### end Alembic commands ###
